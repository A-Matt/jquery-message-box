{"version":3,"sources":["messagebox.js"],"names":["$","undefined","_defaults","buttonDone","buttonFail","buttonsOrder","customClass","customOverlayClass","filterDone","filterFail","input","message","queue","speed","title","top","width","_css","overlay","box-sizing","display","flex-flow","align-items","position","left","height","spacer","flex","messagebox","overflow","content_wrapper","content","label","checkbox_wrapper","checkbox","caption","buttons","boxSizing","_active","_activeStack","_queue","_constants","buttonDoneName","buttonFailName","errorSpeed","keyCodeDone","keyCodeFail","maxHeightCoefficient","topBuffer","_ExecuteQueue","length","_CreateMessageBox","shift","instance","settings","class","addClass","css","appendTo","messageBox","data","outerWidth","text","contentWrapper","html","inputs","settingsInput","_FormatInput","value","type","autotrim","isArray","ret","each","i","add","isPlainObject","name","definition","trim","toLowerCase","wrapper","prop","defaultValue","prependTo","select","options","reduce","item","window","console","warn","log","","defaultSelected","option","disabled","selected","hidden","find","one","removeClass","maxlength","placeholder","_CreateInput","_ParseInputs","children","first","trigger","hide","buttonsWrapper","_CreateButton","keyCode","concat","indexOf","spacerHeight","spacerTopMargin","outerHeight","slice","parseInt","margin-top","animate","_SetMaxHeight","mainClass","button","on","_Button_Click","keyCodes","map","keycode","_ParseKeycodes","par","_Input_Blur","attr","h","offset","event","currentTarget","val","buttonName","closest","error","inputValues","names","values","this","push","is","retObject","valuesOnly","_GetInputsValues","filterFunc","hasClass","empty","Deferred","resolve","when","then","reject","retType","remove","deferred","pop","errorMessage","errorMessageType","append","slideDown","scrollTop","_Window_Resize","w","document","_Window_KeyDown","which","MessageBoxSetup","extend","MessageBox","activeElement","not","promise","join","jQuery"],"mappings":"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","file":"messagebox.min.js","sourcesContent":["/***********************************************************************************************************************\r\nLoadingOverlay - A jQuery Plugin to replace Javascript's window.alert(), window.confirm() and window.prompt() functions\r\n    Author          : Gaspare Sganga\r\n    Version         : 3.0.0\r\n    License         : MIT\r\n    Documentation   : https://gasparesganga.com/labs/jquery-message-box/\r\n***********************************************************************************************************************/\r\n(function($, undefined){\r\n    // Default Settings\r\n    var _defaults = {\r\n        buttonDone          : \"OK\",\r\n        buttonFail          : undefined,\r\n        buttonsOrder        : \"done fail\",\r\n        customClass         : \"\",\r\n        customOverlayClass  : \"\",\r\n        filterDone          : undefined,\r\n        filterFail          : undefined,\r\n        input               : false,\r\n        message             : \"\",\r\n        queue               : true,\r\n        speed               : 200,\r\n        title               : \"\",\r\n        top                 : \"25%\",\r\n        width               : \"auto\"\r\n    };\r\n    \r\n    // Required CSS\r\n    var _css = {\r\n        overlay : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"flex\",\r\n            \"flex-flow\"     : \"column nowrap\",\r\n            \"align-items\"   : \"center\",\r\n            \"position\"      : \"fixed\",\r\n            \"top\"           : \"0\",\r\n            \"left\"          : \"0\",\r\n            \"width\"         : \"100%\",\r\n            \"height\"        : \"100%\"\r\n        },\r\n        spacer : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"flex\"          : \"0 1 auto\"\r\n        },\r\n        messagebox : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"flex\"          : \"0 1 auto\",\r\n            \"display\"       : \"flex\",\r\n            \"flex-flow\"     : \"column nowrap\",\r\n            \"overflow\"      : \"hidden\"\r\n        },\r\n        title : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"width\"         : \"100%\",\r\n            \"flex\"          : \"0 0 auto\"\r\n        },\r\n        content_wrapper : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"width\"         : \"100%\",\r\n            \"flex\"          : \"0 1 auto\",\r\n            \"overflow\"      : \"auto\"\r\n        },\r\n        content : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"table\",\r\n            \"width\"         : \"100%\"\r\n        },\r\n        label : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"block\"\r\n        },\r\n        input : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"block\"\r\n        },\r\n        checkbox_wrapper : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"block\"\r\n        },\r\n        checkbox : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"inline\"\r\n        },\r\n        caption : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"display\"       : \"block\"\r\n        },\r\n        buttons : {\r\n            \"box-sizing\"    : \"border-box\",\r\n            \"width\"         : \"100%\",\r\n            \"flex\"          : \"0 0 auto\"\r\n        },\r\n        boxSizing : {\r\n            \"box-sizing\"    : \"border-box\"\r\n        }\r\n    };\r\n    \r\n    // Globals\r\n    var _active         = undefined;\r\n    var _activeStack    = [];\r\n    var _queue          = [];\r\n    \r\n    // Constants\r\n    var _constants = {\r\n        buttonDoneName          : \"buttonDone\",\r\n        buttonFailName          : \"buttonFail\",\r\n        errorSpeed              : 200,\r\n        keyCodeDone             : [13],\r\n        keyCodeFail             : [27],\r\n        maxHeightCoefficient    : 1.5,\r\n        topBuffer               : 100\r\n    };\r\n    \r\n    \r\n    // **************************************************\r\n    //  METHODS\r\n    // **************************************************\r\n    $.MessageBoxSetup = function(options){\r\n        $.extend(true, _defaults, options);\r\n    };\r\n    \r\n    $.MessageBox = function(options){\r\n        if (!$.isPlainObject(options)) options = {message : options};\r\n        var deferred    = $.Deferred();\r\n        var settings    = $.extend(true, {}, _defaults, options);\r\n        settings.top = $.trim(settings.top).toLowerCase();\r\n        \r\n        // Remove focus from active element\r\n        $(document.activeElement).not(\".messagebox_content_input\").trigger(\"blur\");\r\n        \r\n        // Create MessageBox instance\r\n        var instance = {\r\n            deferred    : deferred,\r\n            keyCodes    : {},\r\n            settings    : settings\r\n        };\r\n        if (settings.queue) {\r\n            _queue.push(instance);\r\n            _ExecuteQueue();\r\n        } else {\r\n            if (_active) _activeStack.push(_active);\r\n            _CreateMessageBox(instance);\r\n        }\r\n        \r\n        // Return Promise\r\n        return deferred.promise();\r\n    };\r\n    \r\n    \r\n    // **************************************************\r\n    //  FUNCTIONS\r\n    // **************************************************\r\n    function _ExecuteQueue(){\r\n        if (_active || !_queue.length) return;\r\n        _CreateMessageBox(_queue.shift());\r\n    }\r\n    \r\n    function _CreateMessageBox(instance){   \r\n        var settings = instance.settings;\r\n        _active = instance;\r\n        \r\n        // Overlay\r\n        var overlay = $(\"<div>\", {\r\n            \"class\" : \"messagebox_overlay\"\r\n        })\r\n        .addClass(settings.customOverlayClass)\r\n        .css(_css.overlay)\r\n        .appendTo(\"body\");\r\n        \r\n        // Spacer\r\n        var spacer = $(\"<div>\", {\r\n            \"class\" : \"messagebox_spacer\"\r\n        })\r\n        .css(_css.spacer)\r\n        .appendTo(overlay);\r\n        \r\n        // MessageBox\r\n        var messageBox = $(\"<div>\", {\r\n            \"class\" : \"messagebox\"\r\n        })\r\n        .addClass(settings.customClass)\r\n        .css(_css.messagebox)\r\n        .data(\"instance\", instance)\r\n        .appendTo(overlay);\r\n        if (settings.width) messageBox.outerWidth(settings.width);\r\n        \r\n        // Title\r\n        if (settings.title) {\r\n            var title = $(\"<div>\", {\r\n                \"class\" : \"messagebox_title\",\r\n                \"text\"  : settings.title\r\n            })\r\n            .css(_css.title)\r\n            .appendTo(messageBox);\r\n        }\r\n        \r\n        // Content\r\n        var contentWrapper = $(\"<div>\", {\r\n            \"class\" : \"messagebox_content_wrapper\"\r\n        })\r\n        .css(_css.content_wrapper)\r\n        .appendTo(messageBox);\r\n        var content = $(\"<div>\", {\r\n            \"class\" : \"messagebox_content\",\r\n            \"html\"  : settings.message\r\n        })\r\n        .css(_css.content)\r\n        .appendTo(contentWrapper);\r\n        \r\n        // Input\r\n        if (settings.input !== false && settings.input !== undefined && settings.input !== null) {\r\n            var inputs = $(\"<div>\", {\r\n                \"class\" : \"messagebox_content_inputs\"\r\n            })\r\n            .css(_css.boxSizing)\r\n            .appendTo(content);\r\n            _ParseInputs(settings.input).appendTo(inputs);\r\n            inputs.children(\".messagebox_content_input\").first().trigger(\"focus\");\r\n        }\r\n        \r\n        // Error\r\n        $(\"<div>\", {\r\n            \"class\" : \"messagebox_content_error\"\r\n        })\r\n        .css(_css.boxSizing)\r\n        .hide()\r\n        .appendTo(content);\r\n        \r\n        // Buttons\r\n        var buttonsWrapper = $(\"<div>\", {\r\n            \"class\" : \"messagebox_buttons\"\r\n        })\r\n        .css(_css.buttons)\r\n        .appendTo(messageBox);\r\n        \r\n        // Button Done\r\n        if (settings.buttonDone) {\r\n            var buttons = $([]);\r\n            if (typeof settings.buttonDone === \"string\") {\r\n                buttons = buttons.add(_CreateButton(\"messagebox_button_done\", _constants.buttonDoneName, {\r\n                    text    : settings.buttonDone, \r\n                    keyCode : _constants.keyCodeDone.concat(settings.buttonFail ? [] : _constants.keyCodeFail)\r\n                }, instance));\r\n            } else {\r\n                $.each(settings.buttonDone, function(name, definition){\r\n                    buttons = buttons.add(_CreateButton(\"messagebox_button_done\", name, definition, instance));\r\n                });\r\n            }\r\n            buttons.appendTo(buttonsWrapper);\r\n        }\r\n        \r\n        // Button Fail\r\n        if (settings.buttonFail) {\r\n            var buttons = $([]);\r\n            if (typeof settings.buttonFail === \"string\") {\r\n                buttons = buttons.add(_CreateButton(\"messagebox_button_fail\", _constants.buttonFailName, {\r\n                    text    : settings.buttonFail, \r\n                    keyCode : _constants.keyCodeFail\r\n                }, instance));\r\n            } else {\r\n                $.each(settings.buttonFail, function(name, definition){\r\n                    buttons = buttons.add(_CreateButton(\"messagebox_button_fail\", name, definition, instance));\r\n                });\r\n            }\r\n            if ($.trim(settings.buttonsOrder).toLowerCase().indexOf(\"d\") === 0) {\r\n                buttons.appendTo(buttonsWrapper);\r\n            } else {\r\n                buttons.prependTo(buttonsWrapper);\r\n            }\r\n        }\r\n        \r\n        // Calculate spacer height\r\n        var spacerHeight    = 0;\r\n        var spacerTopMargin = 0 - messageBox.outerHeight() - _constants.topBuffer;;\r\n        if ($.trim(settings.top).toLowerCase() === \"auto\") {\r\n            // Auto: center vertically using flexbox\r\n            overlay.css(\"justify-content\", \"center\");\r\n            spacerTopMargin = spacerTopMargin - $(window).height();\r\n        } else {\r\n            // Custom: use a spacer element to workoround different browsers flexbox specs interpretation\r\n            overlay.css(\"justify-content\", \"flex-start\");\r\n            spacerHeight = settings.top;;\r\n            // Calculate max-height\r\n            if ($.trim(settings.top).toLowerCase().slice(-1) === \"%\")  {\r\n                // Percentage: set a fixed percentage value too\r\n                messageBox.css(\"max-height\", 100 - (parseInt(settings.top, 10) * _constants.maxHeightCoefficient) + \"%\");\r\n            } else {\r\n                // Fixed: refresh on every window.resize event\r\n                messageBox.data(\"fRefreshMaxHeight\", true);\r\n            }\r\n        }\r\n        \r\n        // Show MessageBox    \r\n        spacer\r\n            .data(\"spacerTopMargin\", spacerTopMargin)\r\n            .css({\r\n                \"height\"        : 0,\r\n                \"margin-top\"    : spacerTopMargin\r\n            })\r\n            .animate({\r\n                \"height\"        : spacerHeight,\r\n                \"margin-top\"    : 0\r\n            }, settings.speed, function(){\r\n                _SetMaxHeight(messageBox, $(window).height());\r\n            });\r\n    }\r\n    \r\n    \r\n    function _CreateButton(mainClass, name, definition, instance){\r\n        if (typeof definition === \"string\") definition = {text : definition};\r\n        // Button\r\n        var button = $(\"<button>\", {\r\n            \"class\" : \"messagebox_buttons_button \" + mainClass,\r\n            \"text\"  : definition.text || \"\"\r\n        })\r\n        .addClass(definition.customClass)\r\n        .css(_css.boxSizing)\r\n        .on(\"click\", {name : name}, _Button_Click);\r\n        \r\n        // KeyCodes\r\n        $.each(_ParseKeycodes(definition.keyCode), function(i, keyCode){\r\n            instance.keyCodes[keyCode] = button;\r\n        });\r\n        \r\n        return button;\r\n    }\r\n    \r\n    function _ParseKeycodes(keyCodes){\r\n        if (typeof keyCodes === \"number\" || typeof keyCodes === \"string\") keyCodes = [keyCodes];\r\n        var ret = [];\r\n        if ($.isArray(keyCodes)) {\r\n            ret = $.map(keyCodes, function(keycode){\r\n                return parseInt(keycode, 10) || undefined;\r\n            });\r\n        }\r\n        return ret;\r\n    }\r\n    \r\n    \r\n    function _ParseInputs(settingsInput){\r\n        // Boolean: plain textbox\r\n        if (settingsInput === true || typeof settingsInput === \"string\") {\r\n            return _FormatInput($(\"<input>\", {\r\n                \"value\" : (settingsInput === true) ? \"\" : settingsInput,\r\n                \"type\"  : \"text\"\r\n            }), {\r\n                autotrim    : true\r\n            });\r\n        }\r\n        \r\n        // Array: plain textboxes with default values\r\n        if ($.isArray(settingsInput)) {\r\n            var ret = $([]);\r\n            $.each(settingsInput, function(i, value){\r\n                ret = ret.add(_FormatInput($(\"<input>\", {\r\n                    \"value\" : value,\r\n                    \"type\"  : \"text\"\r\n                }), {\r\n                    autotrim    : true\r\n                }));\r\n            });\r\n            return ret;\r\n        }\r\n        \r\n        // Object: multiple inputs\r\n        if ($.isPlainObject(settingsInput)) {\r\n            var ret = $([]);\r\n            $.each(settingsInput, function(name, definition){\r\n                var input = _CreateInput(name, definition);\r\n                if (definition.label !== undefined) {\r\n                    var label = $(\"<div>\", {\r\n                        \"class\" : \"messagebox_content_label\",\r\n                        \"text\"  : definition.label\r\n                    }).css(_css.label);\r\n                    ret = ret.add(label);\r\n                }\r\n                ret = ret.add(input);\r\n            });\r\n            return ret;\r\n        }\r\n        \r\n        // Default: custom jQuery object/selector or DOM element\r\n        return $(settingsInput);\r\n    }\r\n    \r\n    function _CreateInput(name, definition){\r\n        var type = $.trim(definition.type).toLowerCase();\r\n        switch (type) {\r\n            case \"caption\":\r\n                delete definition.label;\r\n                return $(\"<div>\", {\r\n                    \"class\" : \"messagebox_content_caption\",\r\n                    \"html\"  : definition.message\r\n                })\r\n                .css(_css.caption)\r\n                .addClass(definition.customClass)\r\n                \r\n            case \"check\":\r\n            case \"checkbox\":\r\n                var wrapper = $(\"<label>\", {\r\n                    \"class\" : \"messagebox_content_checkbox_wrapper\",\r\n                    \"text\"  : definition.title,\r\n                    \"title\" : definition.title\r\n                }).css(_css.checkbox_wrapper);\r\n                $(\"<input>\", {\r\n                    \"type\"  : \"checkbox\",\r\n                    \"class\" : \"messagebox_content_checkbox\",\r\n                    \"name\"  : name,\r\n                    \"title\" : definition.title\r\n                })\r\n                .addClass(definition.customClass)\r\n                .css(_css.checkbox)\r\n                .prop(\"checked\", definition.defaultValue ? true : false)\r\n                .prependTo(wrapper);\r\n                return wrapper;\r\n                \r\n            case \"select\":\r\n                var select  = _FormatInput($(\"<select>\"), {\r\n                    name        : name, \r\n                    title       : definition.title,\r\n                    customClass : definition.customClass\r\n                });\r\n                var options = !$.isArray(definition.options) ? definition.options : definition.options.reduce(function(ret, item){\r\n                    ret[item] = item;\r\n                    return ret;\r\n                }, {});\r\n                if (!options) {\r\n                    _Warning('No options provided for \"' + name + '\"'); \r\n                    options = {\"\" : \"&nbsp;\"};\r\n                }\r\n                var defaultSelected = false;\r\n                $.each(options, function(value, html){\r\n                    var option = $(\"<option>\", {\r\n                        \"value\" : value,\r\n                        \"html\"  : html\r\n                    }).appendTo(select);\r\n                    if (definition.defaultValue === value) {\r\n                        option.prop(\"selected\", true);\r\n                        defaultSelected = true;\r\n                    }\r\n                });\r\n                // Fake placeholder\r\n                if (!defaultSelected) {\r\n                    $(\"<option>\", {\r\n                        \"value\" : \"\",\r\n                        \"text\"  : definition.title\r\n                    }).prop({\r\n                        \"disabled\"  : true,\r\n                        \"selected\"  : true,\r\n                        \"hidden\"    : true\r\n                    }).prependTo(select);\r\n                    select.find(\"option\").css(\"color\", select.css(\"color\"));  \r\n                    select\r\n                        .addClass(\"messagebox_content_input_selectplaceholder\")\r\n                        .prop(\"selectedIndex\", 0)\r\n                        .one(\"change\", function(){\r\n                            select.find(\"option\").css(\"color\", \"\");\r\n                            select.removeClass(\"messagebox_content_input_selectplaceholder\");\r\n                        });\r\n                }\r\n                return select;\r\n                \r\n            case \"text\":\r\n            case \"password\":\r\n            default:\r\n                return _FormatInput($(\"<input>\", {\r\n                    \"type\"          : (type === \"password\") ? \"password\" : \"text\",\r\n                    \"maxlength\"     : definition.maxlength,\r\n                    \"placeholder\"   : definition.title,\r\n                    \"value\"         : definition.defaultValue\r\n                }), {\r\n                    name        : name, \r\n                    title       : definition.title,\r\n                    autotrim    : definition.autotrim,\r\n                    customClass : definition.customClass\r\n                });\r\n        }\r\n    }\r\n    \r\n    function _FormatInput(input, par){\r\n        if (par.autotrim) input.on(\"blur\", _Input_Blur);\r\n        return input\r\n            .addClass(\"messagebox_content_input\")\r\n            .addClass(par[\"customClass\"])\r\n            .css(_css.input)\r\n            .attr({\r\n                name    : par.name,\r\n                title   : par.title\r\n            });\r\n    }\r\n    \r\n    function _GetInputsValues(messageBox){\r\n        var names   = [];\r\n        var values  = [];\r\n        messageBox.find(\".messagebox_content_inputs\").find(\"input, select\").each(function(){\r\n            var input = $(this);\r\n            names.push(input.attr(\"name\"));\r\n            values.push(input.is(\":checkbox\") ? input.is(\":checked\") : input.val());\r\n        });\r\n        if (!values.length) return undefined;\r\n        var retObject   = {};\r\n        var valuesOnly  = false;\r\n        $.each(names, function(i, name){\r\n            if (name === undefined) {\r\n                valuesOnly = true;\r\n                return false;\r\n            }\r\n            retObject[name] = values[i];\r\n        });\r\n        if (valuesOnly && values.length === 1) return values[0];\r\n        return valuesOnly ? values : retObject;\r\n    }\r\n    \r\n    \r\n    function _SetMaxHeight(messageBox, h){\r\n        if (messageBox.data(\"fRefreshMaxHeight\")) messageBox.css(\"max-height\", h - (messageBox.offset().top * _constants.maxHeightCoefficient));\r\n    }\r\n    \r\n    function _Warning(message){\r\n        message = \"jQuery MessageBox Warning: \" + message;\r\n        if (window.console.warn) {\r\n            console.warn(message);\r\n        } else if (window.console.log) {\r\n            console.log(message);\r\n        }\r\n    }\r\n    \r\n    \r\n    // **************************************************\r\n    //  EVENTS\r\n    // **************************************************\r\n    function _Input_Blur(event){\r\n        var input = $(event.currentTarget);\r\n        input.val($.trim(input.val()));\r\n    }\r\n    \r\n    function _Button_Click(event){\r\n        var button      = $(event.currentTarget);\r\n        var buttonName  = event.data.name;\r\n        var messageBox  = button.closest(\".messagebox\");\r\n        var overlay     = messageBox.closest(\".messagebox_overlay\");\r\n        var spacer      = overlay.children(\".messagebox_spacer\").first();\r\n        var content     = messageBox.find(\".messagebox_content\").first();\r\n        var error       = content.children(\".messagebox_content_error\").first();\r\n        var instance    = messageBox.data(\"instance\");\r\n        var inputValues = _GetInputsValues(messageBox);\r\n        var filterFunc  = button.hasClass(\"messagebox_button_done\") ? instance.settings.filterDone : instance.settings.filterFail;\r\n        \r\n        // Filter\r\n        error.hide().empty();\r\n        var filterDef = ($.type(filterFunc) !== \"function\") ? $.Deferred().resolve() : $.when(filterFunc(inputValues, buttonName)).then(function(ret){\r\n            // Bool false: abort\r\n            if (ret === false) return $.Deferred().reject();\r\n            var retType = $.type(ret);\r\n            // Error: display error message and abort (NOTE: it requires jQuery 1.9+ or it will fall in the next case)\r\n            if (retType === \"error\") return $.Deferred().reject(ret.message);\r\n            // String or (jQuery) Object: display error and abort\r\n            if (retType === \"string\" || retType === \"object\" || retType === \"array\") return $.Deferred().reject(ret);\r\n            // Everything else: continue\r\n            return $.Deferred().resolve();\r\n        });\r\n        \r\n        filterDef.then(function(){\r\n            spacer.animate({\r\n                \"height\"        : 0,\r\n                \"margin-top\"    : spacer.data(\"spacerTopMargin\")\r\n            }, instance.settings.speed, function(){\r\n                // Remove DOM objects\r\n                overlay.remove();\r\n                \r\n                // Resolve or Reject Deferred\r\n                if (button.hasClass(\"messagebox_button_done\")) {\r\n                    instance.deferred.resolve(inputValues, buttonName);\r\n                } else {\r\n                    instance.deferred.reject(inputValues, buttonName);\r\n                }\r\n                \r\n                if (_activeStack.length) {\r\n                    // Restore the last active instance\r\n                    _active = _activeStack.pop();\r\n                } else {\r\n                    // Execute next Queue instance\r\n                    _active = undefined;\r\n                    _ExecuteQueue();\r\n                }\r\n            });\r\n        }, function(errorMessage){\r\n            var errorMessageType = $.type(errorMessage);\r\n            if (errorMessageType === \"string\" || errorMessageType === \"object\" || errorMessageType === \"array\") {\r\n                error.css(\"max-width\", content.width()).append(errorMessage).slideDown(_constants.errorSpeed, function(){\r\n                    content.scrollTop(content.height());\r\n                });\r\n            }\r\n        });\r\n    }\r\n    \r\n    function _Window_Resize(event){\r\n        if (!_active) return;\r\n        var w = $(event.currentTarget).width();\r\n        var h = $(event.currentTarget).height();\r\n        $(document).find(\".messagebox\").each(function(){\r\n            var messageBox = $(this);\r\n            // This overflow unset/set is a workoround for a bug in Firefox\r\n            messageBox.find(\".messagebox_content_wrapper\").css(\"overflow\", \"unset\");\r\n            messageBox.css(\"min-width\", (messageBox.outerWidth() > w) ? w : \"\");\r\n            _SetMaxHeight(messageBox, h);\r\n            messageBox.find(\".messagebox_content_wrapper\").css(\"overflow\", \"auto\");\r\n        });\r\n    }\r\n    \r\n    function _Window_KeyDown(event){\r\n        if (!_active) return;\r\n        var button = _active.keyCodes[event.which];\r\n        if (button) {\r\n            button.closest(\".messagebox\").find(\".messagebox_content_input\").trigger(\"blur\");\r\n            button.trigger(\"click\");\r\n        }\r\n    }\r\n    \r\n    \r\n    $(function(){\r\n        $(window)\r\n            .on(\"resize\",   _Window_Resize)\r\n            .on(\"keydown\",  _Window_KeyDown);\r\n        \r\n        $(\"head\").append([\r\n            \"<style>\",\r\n                \".messagebox_overlay *:focus {\",\r\n                  \"outline : 0;\",\r\n                \"}\",\r\n                \".messagebox_buttons button::-moz-focus-inner {\",\r\n                  \"padding : 0;\",\r\n                  \"border  : 0;\",\r\n                \"}\",\r\n            \"</style>\"\r\n        ].join(\" \"));\r\n    });\r\n    \r\n}(jQuery));"]}